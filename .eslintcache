[{"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\index.js":"1","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\App.js":"2","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Login\\Login.jsx":"3","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\Registro.jsx":"4","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\Ajustes.jsx":"5","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Dashboard.jsx":"6","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\Anuncios.jsx":"7","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\DatosUser.jsx":"8","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Nabvar\\Navbar.jsx":"9","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\InfoUser.jsx":"10","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\DatosReg.jsx":"11","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\DatosAjustes.jsx":"12","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\Post.jsx":"13","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\PostUsers.jsx":"14"},{"size":142,"mtime":1616592305000,"results":"15","hashOfConfig":"16"},{"size":1244,"mtime":1634321815435,"results":"17","hashOfConfig":"16"},{"size":4438,"mtime":1634325502880,"results":"18","hashOfConfig":"16"},{"size":8310,"mtime":1634314602388,"results":"19","hashOfConfig":"16"},{"size":7932,"mtime":1634337386941,"results":"20","hashOfConfig":"16"},{"size":503,"mtime":1634252298865,"results":"21","hashOfConfig":"16"},{"size":1042,"mtime":1634321053503,"results":"22","hashOfConfig":"16"},{"size":4296,"mtime":1634330780373,"results":"23","hashOfConfig":"16"},{"size":1025,"mtime":1634216247382,"results":"24","hashOfConfig":"16"},{"size":271,"mtime":1634221323022,"results":"25","hashOfConfig":"16"},{"size":346,"mtime":1634223018420,"results":"26","hashOfConfig":"16"},{"size":382,"mtime":1634239313472,"results":"27","hashOfConfig":"16"},{"size":3221,"mtime":1634333160739,"results":"28","hashOfConfig":"16"},{"size":1582,"mtime":1634333545433,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"6tt5am",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"32"},"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\index.js",[],["67","68"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\App.js",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Login\\Login.jsx",["69","70","71"],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport './login.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport load from '../assets/loading.png';\r\nimport dummyUsers from '../Registro/dummyUsers.json';\r\n\r\nconst Login = (props) => {\r\n    //useState para emaily contraseña\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [acceder, setAcceder] = useState(false);\r\n\r\n    const setInlocalStorageUser = (item) => {\r\n        localStorage.setItem('userLS', JSON.stringify(item));\r\n    };\r\n\r\n    const getUsersFromLocal = () => {\r\n        // converte un string JSON a objeto;\r\n        console.log(JSON.parse(localStorage.getItem('userLS')));\r\n        return JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n    };\r\n\r\n    useEffect(() => {\r\n        const users = localStorage.getItem('userLS');\r\n        // console.log(users);\r\n        if (!users) {\r\n            console.log(dummyUsers);\r\n            setInlocalStorageUser(dummyUsers);\r\n        }\r\n    }, [dummyUsers]);\r\n\r\n    //todo------- FUNCION PROCESAR DATOS------------------------\r\n    const procesarDatos = (e) => {\r\n        e.preventDefault();\r\n        if (!email.trim()) {\r\n            setError('Ingrese email');\r\n            return;\r\n        }\r\n        if (!password.trim()) {\r\n            setError('Ingrese password');\r\n            return;\r\n        }\r\n        //valirdar que la pass sea mayor a 6 digitos\r\n        if (password.length < 6) {\r\n            setError('Password tiene que ser mayor a 6 caracteres');\r\n        }\r\n\r\n        // props.history.push('/dashboard');\r\n\r\n        //todo----- LOG IN DEL USUARIO--------------------\r\n\r\n        const valueEmail = email;\r\n        const valuePass = password;\r\n\r\n        const USERS_DATABASE = JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n\r\n        console.log(USERS_DATABASE);\r\n        /* console.log(typeof USERS_DATABASE); */\r\n\r\n        for (const user of USERS_DATABASE) {\r\n            console.log(user);\r\n            if (user.email === valueEmail && user.password === valuePass) {\r\n                console.log(user.id);\r\n                console.log(`los valores conciden con es el usuario ${valueEmail} con contraseña ${valuePass}`);\r\n                sessionStorage.setItem('userSS', user.email);\r\n                setAcceder(true);\r\n                setTimeout(() => {\r\n                    setAcceder(false);\r\n                    props.history.push('/dashboard');\r\n                }, 3000);\r\n                return;\r\n            } else {\r\n                console.log('los valores no coindicen');\r\n            }\r\n        }\r\n    };\r\n\r\n    //todo---------- FORM-----------------\r\n\r\n    return (\r\n        <div className='container-log'>\r\n            <h3>Iniciar sesión</h3>\r\n\r\n            <div className='row'>\r\n                <form onSubmit={procesarDatos}>\r\n                    {error && <div className='btn alert'>{error}</div>}\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Ingrese un email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n                    <input\r\n                        className='form-control'\r\n                        type='password'\r\n                        placeholder='Ingrese un password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    />\r\n                    <button className='btn-login' type='submit'>\r\n                        {acceder ? (\r\n                            <div className='loading-log'>\r\n                                <img src={load} className='img-load' />\r\n                                <p>Redirigiendo...</p>\r\n                            </div>\r\n                        ) : (\r\n                            <p> Acceder</p>\r\n                        )}\r\n                    </button>\r\n                    {/* <button className='btn btn-info' type='button' onClick={() => setRegistro(!registro)}>\r\n                            {registro ? '¿Ya estas registrado?' : '¿No tienes cuenta?'}\r\n                        </button> */}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\Registro.jsx",["72","73","74","75","76"],"import React, { useState, useEffect } from 'react';\r\nimport './registro.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport dummyUsers from './dummyUsers.json';\r\nimport load from '../assets/loading.png';\r\nimport DatosReg from './DatosReg';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst Registro = () => {\r\n    const route = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [count, setCount] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [showNotification, setShowNotification] = useState(false);\r\n\r\n    //todo--------DISIABLE\r\n\r\n    const disableButton = () => {\r\n        if (loading) {\r\n            return true;\r\n        }\r\n        if (name === '') {\r\n            return true;\r\n        }\r\n        if (email === '') {\r\n            return true;\r\n        }\r\n        if (password === '') {\r\n            return true;\r\n        }\r\n        if (age === '') {\r\n            return true;\r\n        }\r\n        if (city === '') {\r\n            return true;\r\n        }\r\n        if (count === '') {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    //todo------ LOCAL STORAGE-----------------\r\n    //enviarlo al localStorage como un string;\r\n    const setInlocalStorageUser = (item) => {\r\n        localStorage.setItem('userLS', JSON.stringify(item));\r\n    };\r\n\r\n    const getUsersFromLocal = () => {\r\n        // converte un string JSON a objeto;\r\n        console.log(JSON.parse(localStorage.getItem('userLS')));\r\n        return JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n    };\r\n\r\n    useEffect(() => {\r\n        const users = localStorage.getItem('userLS');\r\n        // console.log(users);\r\n        if (!users) {\r\n            console.log(dummyUsers);\r\n            setInlocalStorageUser(dummyUsers);\r\n        }\r\n    }, [dummyUsers]);\r\n\r\n    //todo----SHOW NOTIFICATION----------\r\n    const showNotificationFunc = () => {\r\n        setShowNotification(true);\r\n        setTimeout(() => {\r\n            setShowNotification(false);\r\n        }, 30000);\r\n    };\r\n\r\n    //todo----- PROCESAR DATOS----------\r\n    const procesarDatos = (e) => {\r\n        e.preventDefault();\r\n        //?------VALIDAR-------\r\n        if (!name.trim()) {\r\n            console.log('ingresa tu nombre');\r\n            setError('Ingresa tu nombre');\r\n            return;\r\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(name)) {\r\n            setError('El nombre solo puede contener letras y espacios');\r\n            return;\r\n        }\r\n\r\n        //? ----------------CORREO---------\r\n        if (!email.trim()) {\r\n            console.log('ingresa tu nombre');\r\n            setError('Ingresa un correo valido');\r\n            return;\r\n        } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(email)) {\r\n            setError('El correo no puede contener espacios');\r\n            return;\r\n        }\r\n\r\n        //?-------- CONTRASEÑA---------------\r\n        if (!password.trim()) {\r\n            console.log('ingresa tu contraseña');\r\n            setError('Ingresa tu contraseña');\r\n            return;\r\n        } else if (!/^.{4,12}$/.test(password)) {\r\n            setError('La contraseña debe contener de 4 a 12 digitos');\r\n            return;\r\n        }\r\n        setError('');\r\n        /* setError(null);\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setAge({ Number });\r\n */\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const USERS_DATABASE = getUsersFromLocal();\r\n            const NEW_USER = { name: name, email: email, password: password, age: age, city: city, count: count, id: nanoid() };\r\n            const usersOnTheDatabase = { dummyUsers: [...USERS_DATABASE].concat(NEW_USER) };\r\n\r\n            setInlocalStorageUser(usersOnTheDatabase);\r\n            setLoading(false);\r\n            setName('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setAge('');\r\n            setCity('');\r\n            setCount('');\r\n            showNotificationFunc();\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='container-registro'>\r\n                <h3 className='title-registro'>Registro</h3>\r\n                {error && <div className='text-error'>{error}</div>}\r\n\r\n                <form className='form-registro' onSubmit={procesarDatos}>\r\n                    {/*<h3>Registro</h3> */}\r\n\r\n                    <div className='container-datos'>\r\n                        {/* NOMBRE------------------------------------------------------------ */}\r\n                        <DatosReg\r\n                            title='Nombre'\r\n                            htmlf='name'\r\n                            tipo='text'\r\n                            ph='Ingrese su nombre'\r\n                            evento={(e) => setName(e.target.value)}\r\n                            valor={name}\r\n                        />\r\n\r\n                        {/* CORREO------------------------------------------------------------ */}\r\n                        <DatosReg\r\n                            title='Correo'\r\n                            htmlf='email'\r\n                            tipo='text'\r\n                            ph='Ingrese su correo'\r\n                            evento={(e) => setEmail(e.target.value)}\r\n                            valor={email}\r\n                        />\r\n\r\n                        {/* CONTRASEÑA------------------------------------------------------------ */}\r\n                        <DatosReg\r\n                            title='Contraseña'\r\n                            htmlf='password'\r\n                            tipo='password'\r\n                            ph='Ingrese su contraseña'\r\n                            evento={(e) => setPassword(e.target.value)}\r\n                            valor={password}\r\n                        />\r\n\r\n                        {/* EDAD------------------------------------------------------------*/}\r\n                        <DatosReg title='Edad' htmlf='edad' tipo='number' ph='Ingrese su edad' evento={(e) => setAge(e.target.value)} valor={age} />\r\n\r\n                        {/* Ciudad------------------------------------------------------------*/}\r\n                        <DatosReg\r\n                            title='Ciudad'\r\n                            htmlf='ciudad'\r\n                            tipo='text'\r\n                            ph='Ingrese su ciudad'\r\n                            evento={(e) => setCity(e.target.value)}\r\n                            valor={city}\r\n                        />\r\n\r\n                        {/* EDAD------------------------------------------------------------*/}\r\n                        <DatosReg\r\n                            title='Facebook'\r\n                            htmlf='social'\r\n                            tipo='text'\r\n                            ph='Ingrese su facebook'\r\n                            evento={(e) => setCount(e.target.value)}\r\n                            valor={count}\r\n                        />\r\n\r\n                        {/* ENVIAR------------------------------------------------------------ */}\r\n\r\n                        <button disabled={disableButton()} className='btn-registro' type='submit'>\r\n                            {loading ? (\r\n                                <div className='loading'>\r\n                                    <img src={load} className='img-load' />\r\n                                    <p>Registrando...</p>\r\n                                </div>\r\n                            ) : (\r\n                                <p> Enviar</p>\r\n                            )}\r\n                        </button>\r\n                        {showNotification && <div className='send'>Su usuario ha sido registrado exitosamente!</div>}\r\n                    </div>\r\n\r\n                    {/* <div className='send'>Su usuario ha sido registrado exitosamente!</div> */}\r\n                </form>\r\n\r\n                {/* {loading && <div className='loading'>Loading...</div>} */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Registro;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\Ajustes.jsx",["77"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\Anuncios.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\DatosUser.jsx",["78","79","80"],"import React, { useState } from 'react';\r\nimport './datosUser.css';\r\nimport react from '../../../assets/react.png';\r\nimport { withRouter } from 'react-router-dom';\r\nimport age from '../../../assets/age.png';\r\nimport facebook from '../../../assets/facebook.png';\r\nimport user from '../../../assets/user.png';\r\nimport email from '../../../assets/email.png';\r\nimport city from '../../../assets/city-map.png';\r\nimport setting from '../../../assets/settings.png';\r\nimport InfoUser from './InfoUser';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Dropdown, DropdownItem, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n\r\n// import dummyUsers from '../Registro/dummyUsers.json';\r\n\r\nconst DatosUser = (props) => {\r\n    const userS = sessionStorage.getItem('userSS');\r\n    console.log(userS);\r\n    const userLS = JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n    console.log(userLS);\r\n\r\n    let userCurrent = {};\r\n    for (const usuario of userLS) {\r\n        console.log(typeof usuario);\r\n        if (userS === usuario.email) {\r\n            console.log(`el usuario es ${usuario.email}`);\r\n            userCurrent = usuario;\r\n            console.log(userCurrent);\r\n        }\r\n    }\r\n\r\n    const closeSession = (e) => {\r\n        // e.preventDefault();\r\n        console.log('funciona cerrar sesion');\r\n        const userSession = e.email;\r\n        console.log(userSession);\r\n        sessionStorage.removeItem('userSS');\r\n        props.history.push('/Login');\r\n    };\r\n\r\n    const editar = () => {\r\n        console.log('entro a ediatr');\r\n        props.history.push('/Ajustes');\r\n    };\r\n\r\n    const [dropDown, setDropDown] = useState(false);\r\n    const openDropDown = () => {\r\n        setDropDown(!dropDown);\r\n    };\r\n\r\n    return (\r\n        <div className='data-container'>\r\n            {/* <h1 className='title-user'>Usuario activo</h1> */}\r\n\r\n            <img className='react-img' src={react} />\r\n            <div className='list-data-user'>\r\n                <ul className='list-item'>\r\n                    <InfoUser info={userCurrent.name} img={user} />\r\n                    <InfoUser info={userCurrent.email} img={email} />\r\n                    <InfoUser info={userCurrent.age} img={age} />\r\n                    <InfoUser info={userCurrent.city} img={city} />\r\n                    <InfoUser info={userCurrent.count} img={facebook} />\r\n                    <button className='btn-ajustes' onClick={() => editar()}>\r\n                        <img className='img' src={setting} />\r\n                        <p className='item'> Ajustes</p>\r\n                    </button>\r\n                </ul>\r\n                <button className='close' onClick={() => closeSession(userCurrent)}>\r\n                    Cerrar sesión\r\n                </button>\r\n            </div>\r\n            {/* ------------------------------------------------- */}\r\n\r\n            <Dropdown isOpen={dropDown} toggle={openDropDown}>\r\n                <DropdownToggle caret>Datos </DropdownToggle>\r\n\r\n                <DropdownMenu>\r\n                    <DropdownItem>\r\n                        <InfoUser info={userCurrent.name} img={user} />\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <InfoUser info={userCurrent.email} img={email} />\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <InfoUser info={userCurrent.age} img={age} />\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <InfoUser info={userCurrent.city} img={city} />\r\n                    </DropdownItem>\r\n                    <DropdownItem>\r\n                        <InfoUser info={userCurrent.count} img={facebook} />\r\n                    </DropdownItem>\r\n                    <DropdownItem className='btn-ajustes' onClick={() => editar()}>\r\n                        <img className='img' src={setting} />\r\n                        <p className='item-set'> Ajustes</p>\r\n                    </DropdownItem>\r\n                    <DropdownItem className='close' onClick={() => closeSession(userCurrent)}>\r\n                        Cerrar sesión\r\n                    </DropdownItem>\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(DatosUser);\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Nabvar\\Navbar.jsx",["81","82","83","84"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport './navbar.css';\r\nimport login from '../assets/login.png';\r\nimport home from '../assets/home.png';\r\nimport register from '../assets/add.png';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className='navbar-container'>\r\n            <div className='link'>\r\n                <div className='link-container'>\r\n                    <NavLink to='/' exact className='nav-item'>\r\n                        <img className='imgNav' src={home} />\r\n                    </NavLink>\r\n                    <NavLink to='/registro' className='nav-item'>\r\n                        <img className='imgNav' src={register} />\r\n                    </NavLink>\r\n                    <NavLink to='/login' className='nav-item'>\r\n                        <img className='imgNav' src={login} />\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n//navlink es para colocar la clase active\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\InfoUser.jsx",["85"],"import React from 'react';\r\n\r\nconst InfoUser = (props) => {\r\n    return (\r\n        <div className='item-info'>\r\n            <img className='img' src={props.img} />\r\n            <p className='item'>{props.info}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoUser;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\DatosReg.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\DatosAjustes.jsx",[],["86","87"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\Post.jsx",["88","89","90","91","92"],"import React, { useState, useEffect } from 'react';\r\nimport './post.css';\r\nimport dummyPost from '../dummy/dummyPost.json';\r\nimport editar from '../../../assets/editar.png';\r\nimport closeBtn from '../../../assets/x-button.png';\r\nimport PostUsers from './PostUsers';\r\n\r\nconst Post = () => {\r\n    //todo-----------LOCAL Y SESSION OBTENER USUARIOS-----------------\r\n    const userS = sessionStorage.getItem('userSS');\r\n    // console.log(userS);\r\n    const userLS = JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n    // console.log(userLS);\r\n\r\n    let userCurrent = {};\r\n    for (const usuario of userLS) {\r\n        // console.log(usuario);\r\n        // console.log(typeof usuario);\r\n        if (userS === usuario.email) {\r\n            console.log(`el usuario es ${usuario.email}`);\r\n            userCurrent = usuario;\r\n\r\n            console.log(userCurrent);\r\n        }\r\n    }\r\n\r\n    //todo--------------USESTATE-------------------\r\n    const [newPost, setNewPost] = useState('');\r\n    const [newPosts, setNewPosts] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    //todo----LOCAL STORAGE SUBIR PUBLICACIONES------------------\r\n    const setInlocalStoragePost = (item) => {\r\n        localStorage.setItem('userText', JSON.stringify(item));\r\n    };\r\n\r\n    const getPostFromDataBase = () => {\r\n        //     // converte un string JSON a objeto;\r\n        //     // console.log(JSON.parse(localStorage.getItem('userText')));\r\n        return JSON.parse(localStorage.getItem('userText'));\r\n    };\r\n\r\n    useEffect(() => {\r\n        const userPublic = localStorage.getItem('userText');\r\n        if (!userPublic) {\r\n            setInlocalStoragePost(dummyPost.dummyPost);\r\n            setNewPosts(dummyPost.dummyPost);\r\n        } else {\r\n            setNewPosts(getPostFromDataBase());\r\n        }\r\n    }, [dummyPost]);\r\n\r\n    //todo--------------AGREGAR PUBLICACION FUNCION------\r\n\r\n    const addPostLS = (e) => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n        let POST_DATABASE = getPostFromDataBase();\r\n        const NEW_POST = { name: userCurrent.name, post: newPost };\r\n        POST_DATABASE.unshift(NEW_POST);\r\n\r\n        setInlocalStoragePost(POST_DATABASE);\r\n        setNewPosts(POST_DATABASE);\r\n        setNewPost('');\r\n    };\r\n\r\n    // console.log(textoOntheDatabase);\r\n    return (\r\n        <div className='container-publicaciones'>\r\n            {/* AÑADIR PUBLICACIONS */}\r\n            <form onSubmit={addPostLS} className='add-publicacion'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='¿Qué esta pasando?'\r\n                    onChange={(e) => setNewPost(e.target.value)}\r\n                    value={newPost}\r\n                    className='publicar'\r\n                />\r\n                <button className='enviar' type='submit'>\r\n                    Enviar\r\n                </button>\r\n            </form>\r\n            <div className='publicaciones'>\r\n                <ul className='list'>\r\n                    {newPosts.map((item, key) => (\r\n                        <PostUsers post={item} key={key} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\PostUsers.jsx",["93","94"],"// import { CLASS_TYPES } from '@babel/types';\r\nimport { useState } from 'react';\r\nimport editar from '../../../assets/editar.png';\r\nimport closeBtn from '../../../assets/x-button.png';\r\n\r\nconst PostUsers = ({ post }) => {\r\n    const [postDelete, setPostDelete] = useState([]);\r\n    //DELETE POST\r\n    const deletePost = (item) => {\r\n        const arrayPost = JSON.parse(localStorage.getItem('userText'));\r\n        console.log(arrayPost);\r\n        console.log(item);\r\n\r\n        //         // console.log(item);\r\n        const indexPost = arrayPost.findIndex((element) => element.post === item.post); //me devuelve el indice, en este caso es 0\r\n        console.log(indexPost);\r\n        arrayPost.splice(indexPost, 1);\r\n\r\n        localStorage.setItem('userText', JSON.stringify(arrayPost));\r\n        setPostDelete(arrayPost);\r\n    };\r\n    console.log(postDelete);\r\n\r\n    return (\r\n        <li className='item-container'>\r\n            <div className='user-text'>\r\n                <p className='name-user'>{post.name}</p>\r\n                <span className='item-text'>{post.post}</span>\r\n            </div>\r\n            <div className='drop'>\r\n                <button className='btn-eliminar btn-list' type='submit'>\r\n                    <img className='img-edicion' src={editar} />\r\n                </button>\r\n                <button className='btn-editar btn-list' type='submit' onClick={() => deletePost(post)}>\r\n                    <img className='img-edicion' src={closeBtn} />\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default PostUsers;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":19,"column":11,"nodeType":"101","messageId":"102","endLine":19,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":32,"column":8,"nodeType":"105","endLine":32,"endColumn":20,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":106,"column":33,"nodeType":"109","endLine":106,"endColumn":72},{"ruleId":"99","severity":1,"message":"110","line":10,"column":11,"nodeType":"101","messageId":"102","endLine":10,"endColumn":16},{"ruleId":"99","severity":1,"message":"111","line":12,"column":12,"nodeType":"101","messageId":"102","endLine":12,"endColumn":14},{"ruleId":"99","severity":1,"message":"112","line":12,"column":16,"nodeType":"101","messageId":"102","endLine":12,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":68,"column":8,"nodeType":"105","endLine":68,"endColumn":20,"suggestions":"113"},{"ruleId":"107","severity":1,"message":"108","line":203,"column":37,"nodeType":"109","endLine":203,"endColumn":76},{"ruleId":"103","severity":1,"message":"114","line":48,"column":8,"nodeType":"105","endLine":48,"endColumn":20,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"108","line":56,"column":13,"nodeType":"109","endLine":56,"endColumn":54},{"ruleId":"107","severity":1,"message":"108","line":65,"column":25,"nodeType":"109","endLine":65,"endColumn":62},{"ruleId":"107","severity":1,"message":"108","line":95,"column":25,"nodeType":"109","endLine":95,"endColumn":62},{"ruleId":"99","severity":1,"message":"116","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":14,"column":25,"nodeType":"109","endLine":14,"endColumn":62},{"ruleId":"107","severity":1,"message":"108","line":17,"column":25,"nodeType":"109","endLine":17,"endColumn":66},{"ruleId":"107","severity":1,"message":"108","line":20,"column":25,"nodeType":"109","endLine":20,"endColumn":63},{"ruleId":"107","severity":1,"message":"108","line":6,"column":13,"nodeType":"109","endLine":6,"endColumn":52},{"ruleId":"95","replacedBy":"117"},{"ruleId":"97","replacedBy":"118"},{"ruleId":"99","severity":1,"message":"119","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":14},{"ruleId":"99","severity":1,"message":"120","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"121","line":30,"column":12,"nodeType":"101","messageId":"102","endLine":30,"endColumn":17},{"ruleId":"99","severity":1,"message":"122","line":30,"column":19,"nodeType":"101","messageId":"102","endLine":30,"endColumn":27},{"ruleId":"103","severity":1,"message":"123","line":51,"column":8,"nodeType":"105","endLine":51,"endColumn":19,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"108","line":32,"column":21,"nodeType":"109","endLine":32,"endColumn":65},{"ruleId":"107","severity":1,"message":"108","line":35,"column":21,"nodeType":"109","endLine":35,"endColumn":67},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'getUsersFromLocal' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'dummyUsers'. Either exclude it or remove the dependency array. Outer scope values like 'dummyUsers' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["127"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'route' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.",["128"],"React Hook useEffect has a missing dependency: 'allUsers'. Either include it or remove the dependency array.",["129"],"'Link' is defined but never used.",["125"],["126"],"'editar' is defined but never used.","'closeBtn' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'dummyPost'. Either exclude it or remove the dependency array. Outer scope values like 'dummyPost' aren't valid dependencies because mutating them doesn't re-render the component.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"131","fix":"133"},{"desc":"134","fix":"135"},{"desc":"131","fix":"136"},"Update the dependencies array to be: []",{"range":"137","text":"138"},{"range":"139","text":"138"},"Update the dependencies array to be: [allUsers, userActive]",{"range":"140","text":"141"},{"range":"142","text":"138"},[1101,1113],"[]",[2065,2077],[1352,1364],"[allUsers, userActive]",[1826,1837]]