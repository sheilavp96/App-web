[{"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\index.js":"1","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\App.js":"2","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Login\\Login.jsx":"3","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\Registro.jsx":"4","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\Ajustes.jsx":"5","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Dashboard.jsx":"6","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\Anuncios.jsx":"7","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\DatosUser.jsx":"8","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Nabvar\\Navbar.jsx":"9","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\InfoUser.jsx":"10","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\DatosReg.jsx":"11","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\Post.jsx":"12","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\PostUsers.jsx":"13","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\BackDashboard.jsx":"14","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\ListaAnun.jsx":"15","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\PropsAnuncio.jsx":"16","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\ListDatos.jsx":"17","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\PropsDatos.jsx":"18","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Inicio\\Home.jsx":"19","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Route\\PrivateRoute.jsx":"20"},{"size":142,"mtime":1616592305000,"results":"21","hashOfConfig":"22"},{"size":1459,"mtime":1634739689863,"results":"23","hashOfConfig":"22"},{"size":4664,"mtime":1634739941207,"results":"24","hashOfConfig":"22"},{"size":8359,"mtime":1634691774436,"results":"25","hashOfConfig":"22"},{"size":6485,"mtime":1634693591118,"results":"26","hashOfConfig":"22"},{"size":503,"mtime":1634252298865,"results":"27","hashOfConfig":"22"},{"size":1051,"mtime":1634573255269,"results":"28","hashOfConfig":"22"},{"size":3203,"mtime":1634738680081,"results":"29","hashOfConfig":"22"},{"size":1025,"mtime":1634216247382,"results":"30","hashOfConfig":"22"},{"size":301,"mtime":1634574419348,"results":"31","hashOfConfig":"22"},{"size":346,"mtime":1634223018420,"results":"32","hashOfConfig":"22"},{"size":2928,"mtime":1634648350960,"results":"33","hashOfConfig":"22"},{"size":3543,"mtime":1634681211031,"results":"34","hashOfConfig":"22"},{"size":423,"mtime":1634433287271,"results":"35","hashOfConfig":"22"},{"size":739,"mtime":1634572481413,"results":"36","hashOfConfig":"22"},{"size":548,"mtime":1634571753869,"results":"37","hashOfConfig":"22"},{"size":1220,"mtime":1634585039541,"results":"38","hashOfConfig":"22"},{"size":275,"mtime":1634573867635,"results":"39","hashOfConfig":"22"},{"size":278,"mtime":1634691781016,"results":"40","hashOfConfig":"22"},{"size":539,"mtime":1634693059498,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"6tt5am",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\index.js",[],["91","92"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\App.js",["93","94"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Login\\Login.jsx",["95","96","97","98"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\Registro.jsx",["99","100","101","102","103"],"import React, { useState, useEffect } from 'react';\r\nimport './registro.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport dummyUsers from './dummyUsers.json';\r\nimport load from '../assets/loading.png';\r\nimport DatosReg from './DatosReg';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst Registro = () => {\r\n    const route = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [age, setAge] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [count, setCount] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [showNotification, setShowNotification] = useState(false);\r\n\r\n    //todo--------DISIABLE\r\n\r\n    const disableButton = () => {\r\n        if (loading) {\r\n            return true;\r\n        }\r\n        if (name === '') {\r\n            return true;\r\n        }\r\n        if (email === '') {\r\n            return true;\r\n        }\r\n        if (password === '') {\r\n            return true;\r\n        }\r\n        if (age === '') {\r\n            return true;\r\n        }\r\n        if (city === '') {\r\n            return true;\r\n        }\r\n        if (count === '') {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    //todo------ LOCAL STORAGE-----------------\r\n    //enviarlo al localStorage como un string;\r\n    const setInlocalStorageUser = (item) => {\r\n        localStorage.setItem('userLS', JSON.stringify(item));\r\n    };\r\n\r\n    const getUsersFromLocal = () => {\r\n        // converte un string JSON a objeto;\r\n        console.log(JSON.parse(localStorage.getItem('userLS')));\r\n        return JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n    };\r\n\r\n    useEffect(() => {\r\n        // sessionStorage.removeItem('userSS');\r\n        const users = localStorage.getItem('userLS');\r\n        // console.log(users);\r\n        if (!users) {\r\n            console.log(dummyUsers);\r\n            setInlocalStorageUser(dummyUsers);\r\n        }\r\n    }, [dummyUsers]);\r\n\r\n    //todo----SHOW NOTIFICATION----------\r\n    const showNotificationFunc = () => {\r\n        setShowNotification(true);\r\n        setTimeout(() => {\r\n            setShowNotification(false);\r\n        }, 30000);\r\n    };\r\n\r\n    //todo----- PROCESAR DATOS----------\r\n    const procesarDatos = (e) => {\r\n        e.preventDefault();\r\n        //?------VALIDAR-------\r\n        if (!name.trim()) {\r\n            console.log('ingresa tu nombre');\r\n            setError('Ingresa tu nombre');\r\n            return;\r\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(name)) {\r\n            setError('El nombre solo puede contener letras y espacios');\r\n            return;\r\n        }\r\n\r\n        //? ----------------CORREO---------\r\n        if (!email.trim()) {\r\n            console.log('ingresa tu nombre');\r\n            setError('Ingresa un correo valido');\r\n            return;\r\n        } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(email)) {\r\n            setError('El correo no puede contener espacios');\r\n            return;\r\n        }\r\n\r\n        //?-------- CONTRASEÑA---------------\r\n        if (!password.trim()) {\r\n            console.log('ingresa tu contraseña');\r\n            setError('Ingresa tu contraseña');\r\n            return;\r\n        } else if (!/^.{4,12}$/.test(password)) {\r\n            setError('La contraseña debe contener de 4 a 12 digitos');\r\n            return;\r\n        }\r\n        setError('');\r\n        /* setError(null);\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setAge({ Number });\r\n */\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            const USERS_DATABASE = getUsersFromLocal();\r\n            const NEW_USER = { name: name, email: email, password: password, age: age, city: city, count: count, id: nanoid() };\r\n            const usersOnTheDatabase = { dummyUsers: [...USERS_DATABASE].concat(NEW_USER) };\r\n\r\n            setInlocalStorageUser(usersOnTheDatabase);\r\n            setLoading(false);\r\n            setName('');\r\n            setEmail('');\r\n            setPassword('');\r\n            setAge('');\r\n            setCity('');\r\n            setCount('');\r\n            showNotificationFunc();\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='container-registro'>\r\n                <h3 className='title-registro'>Registro</h3>\r\n                {error && <div className='text-error'>{error}</div>}\r\n\r\n                <form className='form-registro' onSubmit={procesarDatos}>\r\n                    {/*<h3>Registro</h3> */}\r\n\r\n                    <div className='container-datos'>\r\n                        {/* NOMBRE------------------------------------------------------------ */}\r\n                        <DatosReg\r\n                            title='Nombre'\r\n                            htmlf='name'\r\n                            tipo='text'\r\n                            ph='Ingrese su nombre'\r\n                            evento={(e) => setName(e.target.value)}\r\n                            valor={name}\r\n                        />\r\n\r\n                        {/* CORREO------------------------------------------------------------ */}\r\n                        <DatosReg\r\n                            title='Correo'\r\n                            htmlf='email'\r\n                            tipo='text'\r\n                            ph='Ingrese su correo'\r\n                            evento={(e) => setEmail(e.target.value)}\r\n                            valor={email}\r\n                        />\r\n\r\n                        {/* CONTRASEÑA------------------------------------------------------------ */}\r\n                        <DatosReg\r\n                            title='Contraseña'\r\n                            htmlf='password'\r\n                            tipo='password'\r\n                            ph='Ingrese su contraseña'\r\n                            evento={(e) => setPassword(e.target.value)}\r\n                            valor={password}\r\n                        />\r\n\r\n                        {/* EDAD------------------------------------------------------------*/}\r\n                        <DatosReg title='Edad' htmlf='edad' tipo='number' ph='Ingrese su edad' evento={(e) => setAge(e.target.value)} valor={age} />\r\n\r\n                        {/* Ciudad------------------------------------------------------------*/}\r\n                        <DatosReg\r\n                            title='Ciudad'\r\n                            htmlf='ciudad'\r\n                            tipo='text'\r\n                            ph='Ingrese su ciudad'\r\n                            evento={(e) => setCity(e.target.value)}\r\n                            valor={city}\r\n                        />\r\n\r\n                        {/* EDAD------------------------------------------------------------*/}\r\n                        <DatosReg\r\n                            title='Facebook'\r\n                            htmlf='social'\r\n                            tipo='text'\r\n                            ph='Ingrese su facebook'\r\n                            evento={(e) => setCount(e.target.value)}\r\n                            valor={count}\r\n                        />\r\n\r\n                        {/* ENVIAR------------------------------------------------------------ */}\r\n\r\n                        <button disabled={disableButton()} className='btn-registro' type='submit'>\r\n                            {loading ? (\r\n                                <div className='loading'>\r\n                                    <img src={load} className='img-load' />\r\n                                    <p>Registrando...</p>\r\n                                </div>\r\n                            ) : (\r\n                                <p> Enviar</p>\r\n                            )}\r\n                        </button>\r\n                        {showNotification && <div className='send'>Su usuario ha sido registrado exitosamente!</div>}\r\n                    </div>\r\n\r\n                    {/* <div className='send'>Su usuario ha sido registrado exitosamente!</div> */}\r\n                </form>\r\n\r\n                {/* {loading && <div className='loading'>Loading...</div>} */}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Registro;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\Ajustes.jsx",["104","105","106"],"import React, { useState, useEffect } from 'react';\r\n// import { withRouter } from 'react-router';\r\nimport './ajustes.css';\r\nimport BackDashboard from './BackDashboard';\r\nimport load from '../../../assets/loading.png';\r\n// ' sets/loading.png';\r\n\r\nconst initialState = {\r\n    age: '',\r\n    city: '',\r\n    count: '',\r\n    email: '',\r\n    name: '',\r\n    password: '',\r\n};\r\n\r\nconst Ajustes = () => {\r\n    const [userActive, setUserActive] = useState({});\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [userInfo, setUserInfo] = useState(initialState);\r\n    const [indexUser, setIndexUser] = useState(0);\r\n    const [notificacion, setNotificacion] = useState(false);\r\n    const [actualizar, setActualizar] = useState(false);\r\n\r\n    let indexUserActive;\r\n    useEffect(() => {\r\n        //usuario activo en ss\r\n        const userActive = JSON.parse(sessionStorage.getItem('userSS'));\r\n        console.log(userActive);\r\n\r\n        //datos de todos los usuarios\r\n        const allUser = JSON.parse(localStorage.getItem('userLS'))['dummyUsers'];\r\n        // console.log('all', allUser.dummyUsers);\r\n        console.log(allUser);\r\n\r\n        //indice del userActive en el array allUSERS\r\n        indexUserActive = allUsers.findIndex((element) => element.id === userActive.id);\r\n        setIndexUser(indexUserActive);\r\n        console.log(indexUser);\r\n        //\r\n        setAllUsers(allUser);\r\n        setUserActive(userActive);\r\n        console.log(typeof allUser);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let userObj = userActive;\r\n\r\n        setUserInfo(userObj);\r\n    }, [userActive]);\r\n    console.log(userInfo);\r\n\r\n    const handleChangeValues = (e) => {\r\n        console.log(e);\r\n        userInfo[e.target.name] = e.target.value;\r\n        // console.log((userInfo[e.target.name] = e.target.value));\r\n        setUserInfo({\r\n            ...userInfo,\r\n        });\r\n\r\n        console.log(userActive);\r\n        console.log(indexUser);\r\n    };\r\n    console.log(userInfo);\r\n\r\n    // console.log(indexUser);\r\n\r\n    const NotificacionFunc = () => {\r\n        setNotificacion(true);\r\n        setTimeout(() => {\r\n            setNotificacion(false);\r\n        }, 3000);\r\n    };\r\n\r\n    const actualizarDatos = (e) => {\r\n        e.preventDefault();\r\n\r\n        const eliminado = allUsers.splice(indexUser, 1, userInfo);\r\n        const newArray = { dummyUsers: [...allUsers] };\r\n\r\n        localStorage.setItem('userLS', JSON.stringify(newArray));\r\n        sessionStorage.setItem('userSS', JSON.stringify(userInfo));\r\n        setActualizar(true);\r\n        setTimeout(() => {\r\n            setActualizar(false);\r\n            NotificacionFunc();\r\n        }, 3000);\r\n    };\r\n\r\n    return (\r\n        <div className='container-ajustes'>\r\n            <BackDashboard />\r\n            <form className='form-ajustes ' onSubmit={actualizarDatos}>\r\n                {/*<h3>Registro</h3> */}\r\n\r\n                <div className='item-ajustes'>\r\n                    {/* NOMBRE------------------------------------------------------------ */}\r\n\r\n                    <div className='datos-container'>\r\n                        <label htmlFor='name'>Nombre</label>\r\n                        <input type='text' placeholder='Ingrese su nombre' name='name' value={userInfo.name} onChange={handleChangeValues} />\r\n                    </div>\r\n                    {/* CORREO------------------------------------------------------------ */}\r\n\r\n                    <div className='datos-container'>\r\n                        <label htmlFor='email'>Correo</label>\r\n                        <input type='text' placeholder='Ingrese su correo' name='email' value={userInfo.email} onChange={handleChangeValues} />\r\n                    </div>\r\n                    {/* CONTRASEÑA------------------------------------------------------------ */}\r\n\r\n                    <div className='datos-container'>\r\n                        <label htmlFor='password'>Contraseña</label>\r\n                        <input\r\n                            type='password'\r\n                            placeholder='Ingrese su contraseña'\r\n                            name='password'\r\n                            value={userInfo.password}\r\n                            onChange={handleChangeValues}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* EDAD------------------------------------------------------------*/}\r\n\r\n                    <div className='datos-container'>\r\n                        <label htmlFor='age'>Edad</label>\r\n                        <input\r\n                            type='number'\r\n                            min='18'\r\n                            max='100'\r\n                            placeholder='Ingrese su edad'\r\n                            name='age'\r\n                            value={userInfo.age}\r\n                            onChange={handleChangeValues}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Ciudad------------------------------------------------------------*/}\r\n                    <div className='datos-container'>\r\n                        <label htmlFor='ciudad'>Ciudad</label>\r\n                        <input type='text' placeholder='Ingrese su ciudad' name='city' value={userInfo.city} onChange={handleChangeValues} />\r\n                    </div>\r\n\r\n                    {/* EDAD------------------------------------------------------------*/}\r\n\r\n                    <div className='datos-container'>\r\n                        <label htmlFor='social '>Facebook</label>\r\n                        <input type='text' placeholder='Ingrese su red social' name='count' value={userInfo.count} onChange={handleChangeValues} />\r\n                    </div>\r\n\r\n                    {/* ENVIAR------------------------------------------------------------ */}\r\n                </div>\r\n\r\n                <button className='btn-registro' type='submit'>\r\n                    {/* <p>Actualizar</p> */}\r\n                    {actualizar ? (\r\n                        <div className='loading-log'>\r\n                            <img src={load} className='img-load' />\r\n                            <p>Actualizando...</p>\r\n                        </div>\r\n                    ) : (\r\n                        <p> Actualizar</p>\r\n                    )}\r\n                </button>\r\n\r\n                {notificacion && <div className='send'>Su usuario ha sido actualizado exitosamente!</div>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Ajustes;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\Anuncios.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\DatosUser.jsx",["107","108","109","110","111","112","113","114","115"],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Nabvar\\Navbar.jsx",["116","117","118","119"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport './navbar.css';\r\nimport login from '../assets/login.png';\r\nimport home from '../assets/home.png';\r\nimport register from '../assets/add.png';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div className='navbar-container'>\r\n            <div className='link'>\r\n                <div className='link-container'>\r\n                    <NavLink to='/' exact className='nav-item'>\r\n                        <img className='imgNav' src={home} />\r\n                    </NavLink>\r\n                    <NavLink to='/registro' className='nav-item'>\r\n                        <img className='imgNav' src={register} />\r\n                    </NavLink>\r\n                    <NavLink to='/login' className='nav-item'>\r\n                        <img className='imgNav' src={login} />\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n//navlink es para colocar la clase active\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\InfoUser.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Registro\\DatosReg.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\Post.jsx",["120"],"import React, { useState, useEffect } from 'react';\r\nimport './post.css';\r\nimport dummyPost from '../dummy/dummyPost.json';\r\n\r\nimport PostUsers from './PostUsers';\r\n\r\nconst Post = () => {\r\n    //todo--------------USESTATE-------------------\r\n    const [newPost, setNewPost] = useState('');\r\n    const [newPosts, setNewPosts] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    //todo-----------LOCAL Y SESSION OBTENER USUARIOS-----------------\r\n    const userCurrent = JSON.parse(sessionStorage.getItem('userSS'));\r\n    console.log(typeof userCurrent);\r\n\r\n    //todo----LOCAL STORAGE SUBIR PUBLICACIONES------------------\r\n    const setInlocalStoragePost = (item) => {\r\n        localStorage.setItem('userText', JSON.stringify(item));\r\n    };\r\n    const getPostFromDataBase = () => {\r\n        return JSON.parse(localStorage.getItem('userText'));\r\n    };\r\n    useEffect(() => {\r\n        const userPublic = localStorage.getItem('userText');\r\n        if (!userPublic) {\r\n            setInlocalStoragePost(dummyPost.dummyPost);\r\n            setNewPosts(dummyPost.dummyPost);\r\n        } else {\r\n            setNewPosts(getPostFromDataBase());\r\n        }\r\n    }, [dummyPost]);\r\n\r\n    //todo--------------AGREGAR PUBLICACION FUNCION------\r\n\r\n    const addPostLS = (e) => {\r\n        e.preventDefault();\r\n        console.log(e);\r\n        if (!newPost.trim()) {\r\n            console.log('elemento vacio');\r\n            setError('Escriba algo....');\r\n            return;\r\n        }\r\n        let POST_DATABASE = getPostFromDataBase();\r\n        const NEW_POST = { name: userCurrent.name, post: newPost, user: { name: userCurrent.name, email: userCurrent.email } };\r\n        POST_DATABASE.unshift(NEW_POST);\r\n\r\n        setInlocalStoragePost(POST_DATABASE);\r\n        setNewPosts(POST_DATABASE);\r\n        setNewPost('');\r\n        setError(null);\r\n    };\r\n\r\n    return (\r\n        <div className='container-publicaciones'>\r\n            {/* AÑADIR PUBLICACIONS */}\r\n            {error ? <p className='text-errors'>{error}</p> : null}\r\n\r\n            <form onSubmit={addPostLS} className='add-publicacion'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='¿Qué esta pasando?'\r\n                    onChange={(e) => setNewPost(e.target.value)}\r\n                    value={newPost}\r\n                    className='publicar'\r\n                />\r\n                <button className='enviar' type='submit'>\r\n                    Enviar\r\n                </button>\r\n            </form>\r\n            <div className='publicaciones'>\r\n                <ul className='list'>\r\n                    {newPosts.map((item, key) => (\r\n                        <div>\r\n                            <PostUsers post={item} key={key} setNewPosts={setNewPosts} />\r\n                        </div>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\PostUser\\PostUsers.jsx",["121","122","123","124","125","126"],"import editar from '../../../assets/editar.png';\r\nimport closeBtn from '../../../assets/x-button.png';\r\nimport { useEffect, useState } from 'react';\r\nimport check from '../../../assets/check.png';\r\nconst PostUsers = ({ post, setNewPosts }) => {\r\n    // let arrayPost;\r\n    const user_session = JSON.parse(sessionStorage.getItem('userSS'));\r\n    const [value, setValue] = useState(post.post);\r\n    const [showEditInput, setShowEditInput] = useState(false);\r\n    const [postAct, setPostAct] = useState('');\r\n\r\n    const deletePost = (item) => {\r\n        const arrayPost = JSON.parse(localStorage.getItem('userText'));\r\n\r\n        const indexPost = arrayPost.findIndex((element) => element.post === item.post); //me devuelve el indice, en este caso es 0\r\n        console.log(indexPost);\r\n        const postDelete = arrayPost.splice(indexPost, 1);\r\n        setNewPosts(arrayPost);\r\n        console.log(postDelete);\r\n        localStorage.setItem('userText', JSON.stringify(arrayPost));\r\n    };\r\n\r\n    const editPost = (item) => {\r\n        console.log(item);\r\n        setValue(item.post);\r\n        console.log('editar post:', item.post);\r\n        setShowEditInput(!showEditInput);\r\n    };\r\n\r\n    const handleChangeValues = (e) => {\r\n        console.log(post);\r\n        console.log(e.target.value);\r\n        let newEditedPost = e.target.value;\r\n\r\n        post.post = newEditedPost;\r\n\r\n        setValue(newEditedPost);\r\n    };\r\n\r\n    const actualizarPost = () => {\r\n        const allPost = JSON.parse(localStorage.getItem('userText'));\r\n        console.log(typeof allPost);\r\n\r\n        const indexPost = allPost.findIndex((element) => element.name === post.name);\r\n        for (const elemento of allPost) {\r\n            console.log(elemento);\r\n            if (elemento.name === post.name) {\r\n                allPost[indexPost].post = value;\r\n                console.log(allPost);\r\n\r\n                localStorage.setItem('userText', JSON.stringify(allPost));\r\n            }\r\n        }\r\n        console.log(allPost);\r\n\r\n        setShowEditInput(false);\r\n\r\n        // console.log(post.name);\r\n        // console.log(indexPost);\r\n        //     console.log('se va a actualizar');\r\n        //     console.log(typeof value);\r\n    };\r\n\r\n    return (\r\n        <li className='item-container'>\r\n            <div className='user-text'>\r\n                <p className='name-user'>{post.name}</p>\r\n                {showEditInput ? (\r\n                    <div className='inputEdit'>\r\n                        <input type='text' value={value} name='value' onChange={handleChangeValues} className='edit' />\r\n                        <button className='ok'>\r\n                            <img className='img-check' src={check} onClick={() => actualizarPost()} />\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <span className='item-text'>{post.post}</span>\r\n                )}\r\n            </div>\r\n            {user_session.email === post.user.email && (\r\n                <div className='drop'>\r\n                    <button className='btn-eliminar btn-list' type='submit' onClick={() => editPost(post)}>\r\n                        <img className='img-edicion' src={editar} />\r\n                    </button>\r\n                    <button className='btn-editar btn-list' type='submit' onClick={() => deletePost(post)}>\r\n                        <img className='img-edicion' src={closeBtn} />\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default PostUsers;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Ajustes\\BackDashboard.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\ListaAnun.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\Anuncios\\PropsAnuncio.jsx",["127"],"import React from 'react';\r\n\r\nconst PropsAnuncio = (props) => {\r\n    return (\r\n        <>\r\n            <li class='related-post'>\r\n                <img src={props.img} alt='related' width='75px' height='75px' />\r\n                <div>\r\n                    <a href='#' class='related-link'>\r\n                        {props.text}\r\n                    </a>\r\n                    <br />\r\n                    <p class='related-author'>{props.author}</p>\r\n                </div>\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PropsAnuncio;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\ListDatos.jsx",["128"],"import React from 'react';\r\nimport PropsDatos from './PropsDatos';\r\nimport age from '../../../assets/age.png';\r\nimport facebook from '../../../assets/facebook.png';\r\nimport user from '../../../assets/user.png';\r\nimport email from '../../../assets/email.png';\r\nimport city from '../../../assets/city-map.png';\r\nimport setting from '../../../assets/settings.png';\r\nimport { DropdownItem } from 'reactstrap';\r\n\r\nconst ListDatos = () => {\r\n    const userCurrent = JSON.parse(sessionStorage.getItem('userSS'));\r\n\r\n    return (\r\n        <div>\r\n            <DropdownItem>\r\n                <PropsDatos info={userCurrent.name} img={user} />\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n                <PropsDatos info={userCurrent.email} img={email} />\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n                <PropsDatos info={userCurrent.age} img={age} />\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n                <PropsDatos info={userCurrent.city} img={city} />\r\n            </DropdownItem>\r\n            <DropdownItem>\r\n                <PropsDatos info={userCurrent.count} img={facebook} />\r\n            </DropdownItem>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListDatos;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\components\\Dashboard\\DatosUser\\PropsDatos.jsx",["129"],"import React from 'react';\r\n\r\nconst PropsDatos = (props) => {\r\n    return (\r\n        <div className='item-info'>\r\n            <img className='img' src={props.img} />\r\n            <p className='item'>{props.info}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PropsDatos;\r\n","C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Inicio\\Home.jsx",[],"C:\\Users\\Sears\\Documents\\Proyectos_vsc\\ReactJs\\app-web\\src\\Route\\PrivateRoute.jsx",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":3,"column":50,"nodeType":"136","messageId":"137","endLine":3,"endColumn":58},{"ruleId":"134","severity":1,"message":"138","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":20},{"ruleId":"134","severity":1,"message":"139","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":15},{"ruleId":"134","severity":1,"message":"140","line":20,"column":11,"nodeType":"136","messageId":"137","endLine":20,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":38,"column":8,"nodeType":"143","endLine":38,"endColumn":20,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":113,"column":33,"nodeType":"147","endLine":113,"endColumn":72},{"ruleId":"134","severity":1,"message":"148","line":10,"column":11,"nodeType":"136","messageId":"137","endLine":10,"endColumn":16},{"ruleId":"134","severity":1,"message":"149","line":12,"column":12,"nodeType":"136","messageId":"137","endLine":12,"endColumn":14},{"ruleId":"134","severity":1,"message":"150","line":12,"column":16,"nodeType":"136","messageId":"137","endLine":12,"endColumn":21},{"ruleId":"141","severity":1,"message":"142","line":69,"column":8,"nodeType":"143","endLine":69,"endColumn":20,"suggestions":"151"},{"ruleId":"145","severity":1,"message":"146","line":204,"column":37,"nodeType":"147","endLine":204,"endColumn":76},{"ruleId":"141","severity":1,"message":"152","line":37,"column":27,"nodeType":"153","endLine":37,"endColumn":88},{"ruleId":"134","severity":1,"message":"154","line":78,"column":15,"nodeType":"136","messageId":"137","endLine":78,"endColumn":24},{"ruleId":"145","severity":1,"message":"146","line":157,"column":29,"nodeType":"147","endLine":157,"endColumn":68},{"ruleId":"134","severity":1,"message":"155","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":11},{"ruleId":"134","severity":1,"message":"156","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":16},{"ruleId":"134","severity":1,"message":"157","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"158","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":13},{"ruleId":"134","severity":1,"message":"159","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":12},{"ruleId":"134","severity":1,"message":"160","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":50,"column":13,"nodeType":"147","endLine":50,"endColumn":54},{"ruleId":"145","severity":1,"message":"146","line":56,"column":25,"nodeType":"147","endLine":56,"endColumn":62},{"ruleId":"145","severity":1,"message":"146","line":75,"column":25,"nodeType":"147","endLine":75,"endColumn":62},{"ruleId":"134","severity":1,"message":"161","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":14,"column":25,"nodeType":"147","endLine":14,"endColumn":62},{"ruleId":"145","severity":1,"message":"146","line":17,"column":25,"nodeType":"147","endLine":17,"endColumn":66},{"ruleId":"145","severity":1,"message":"146","line":20,"column":25,"nodeType":"147","endLine":20,"endColumn":63},{"ruleId":"141","severity":1,"message":"162","line":32,"column":8,"nodeType":"143","endLine":32,"endColumn":19,"suggestions":"163"},{"ruleId":"134","severity":1,"message":"164","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":19},{"ruleId":"134","severity":1,"message":"165","line":10,"column":12,"nodeType":"136","messageId":"137","endLine":10,"endColumn":19},{"ruleId":"134","severity":1,"message":"166","line":10,"column":21,"nodeType":"136","messageId":"137","endLine":10,"endColumn":31},{"ruleId":"145","severity":1,"message":"146","line":72,"column":29,"nodeType":"147","endLine":72,"endColumn":103},{"ruleId":"145","severity":1,"message":"146","line":82,"column":25,"nodeType":"147","endLine":82,"endColumn":69},{"ruleId":"145","severity":1,"message":"146","line":85,"column":25,"nodeType":"147","endLine":85,"endColumn":71},{"ruleId":"167","severity":1,"message":"168","line":9,"column":21,"nodeType":"147","endLine":9,"endColumn":54},{"ruleId":"134","severity":1,"message":"169","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":6,"column":13,"nodeType":"147","endLine":6,"endColumn":52},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is defined but never used.","'useAuth' is defined but never used.","'getUsersFromLocal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'dummyUsers'. Either exclude it or remove the dependency array. Outer scope values like 'dummyUsers' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["172"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'route' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.",["173"],"Assignments to the 'indexUserActive' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'eliminado' is assigned a value but never used.","'age' is defined but never used.","'facebook' is defined but never used.","'user' is defined but never used.","'email' is defined but never used.","'city' is defined but never used.","'InfoUser' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'dummyPost'. Either exclude it or remove the dependency array. Outer scope values like 'dummyPost' aren't valid dependencies because mutating them doesn't re-render the component.",["174"],"'useEffect' is defined but never used.","'postAct' is assigned a value but never used.","'setPostAct' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setting' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"175","fix":"177"},{"desc":"175","fix":"178"},"Update the dependencies array to be: []",{"range":"179","text":"180"},{"range":"181","text":"180"},{"range":"182","text":"180"},[1277,1289],"[]",[2114,2126],[1174,1185]]